/*
 * generated by Xtext 2.30.0
 */
grammar InternalGSelfOperatingHeuristicText;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.gsht.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.gsht.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.gsht.services.GSelfOperatingHeuristicTextGrammarAccess;

}
@parser::members {
	private GSelfOperatingHeuristicTextGrammarAccess grammarAccess;

	public void setGrammarAccess(GSelfOperatingHeuristicTextGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobal
entryRuleGlobal
:
{ before(grammarAccess.getGlobalRule()); }
	 ruleGlobal
{ after(grammarAccess.getGlobalRule()); } 
	 EOF 
;

// Rule Global
ruleGlobal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalAccess().getGroup()); }
		(rule__Global__Group__0)
		{ after(grammarAccess.getGlobalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocal
entryRuleLocal
:
{ before(grammarAccess.getLocalRule()); }
	 ruleLocal
{ after(grammarAccess.getLocalRule()); } 
	 EOF 
;

// Rule Local
ruleLocal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalAccess().getGroup()); }
		(rule__Local__Group__0)
		{ after(grammarAccess.getLocalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlter
entryRuleAlter
:
{ before(grammarAccess.getAlterRule()); }
	 ruleAlter
{ after(grammarAccess.getAlterRule()); } 
	 EOF 
;

// Rule Alter
ruleAlter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlterAccess().getGroup()); }
		(rule__Alter__Group__0)
		{ after(grammarAccess.getAlterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup()); }
		(rule__Atomic__Group__0)
		{ after(grammarAccess.getAtomicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableReference
entryRuleVariableReference
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getVariableAssignment()); }
		(rule__VariableReference__VariableAssignment)
		{ after(grammarAccess.getVariableReferenceAccess().getVariableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataType
ruleDataType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ComparisonOperator
ruleComparisonOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
		(rule__ComparisonOperator__Alternatives)
		{ after(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStatesAssignment_3_0()); }
		(rule__Model__StatesAssignment_3_0)
		{ after(grammarAccess.getModelAccess().getStatesAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getAltersAssignment_3_1()); }
		(rule__Model__AltersAssignment_3_1)
		{ after(grammarAccess.getModelAccess().getAltersAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueTrueKeyword_1_0_0()); }
		'true'
		{ after(grammarAccess.getAtomicAccess().getValueTrueKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getValueFalseKeyword_1_0_1()); }
		'false'
		{ after(grammarAccess.getAtomicAccess().getValueFalseKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getBOOLTerminalRuleCall_0()); }
		RULE_BOOL
		{ after(grammarAccess.getValueAccess().getBOOLTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getINTTerminalRuleCall_2()); }
		RULE_INT
		{ after(grammarAccess.getValueAccess().getINTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getDOUBLETerminalRuleCall_3()); }
		RULE_DOUBLE
		{ after(grammarAccess.getValueAccess().getDOUBLETerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_0()); }
		('int')
		{ after(grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
		('boolean')
		{ after(grammarAccess.getDataTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_2()); }
		('double')
		{ after(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_3()); }
		('String')
		{ after(grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getEQUALSEnumLiteralDeclaration_0()); }
		('==')
		{ after(grammarAccess.getComparisonOperatorAccess().getEQUALSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getNOT_EQUALSEnumLiteralDeclaration_1()); }
		('!=')
		{ after(grammarAccess.getComparisonOperatorAccess().getNOT_EQUALSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGREATER_THANEnumLiteralDeclaration_2()); }
		('>')
		{ after(grammarAccess.getComparisonOperatorAccess().getGREATER_THANEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getLESS_THANEnumLiteralDeclaration_3()); }
		('<')
		{ after(grammarAccess.getComparisonOperatorAccess().getLESS_THANEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGREATER_THAN_OR_EQUALSEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getComparisonOperatorAccess().getGREATER_THAN_OR_EQUALSEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getLESS_THAN_OR_EQUALSEnumLiteralDeclaration_5()); }
		('<=')
		{ after(grammarAccess.getComparisonOperatorAccess().getLESS_THAN_OR_EQUALSEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDRONEKeyword_0()); }
	'DRONE'
	{ after(grammarAccess.getModelAccess().getDRONEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_2()); }
	(rule__Model__Group_2__0)?
	{ after(grammarAccess.getModelAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_3()); }
	(rule__Model__Alternatives_3)*
	{ after(grammarAccess.getModelAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__0__Impl
	rule__Model__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGLOBALKeyword_2_0()); }
	'GLOBAL'
	{ after(grammarAccess.getModelAccess().getGLOBALKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__1__Impl
	rule__Model__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__2__Impl
	rule__Model__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGlobalsAssignment_2_2()); }
	(rule__Model__GlobalsAssignment_2_2)*
	{ after(grammarAccess.getModelAccess().getGlobalsAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_2_3()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Global__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__0__Impl
	rule__Global__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getNameAssignment_0()); }
	(rule__Global__NameAssignment_0)
	{ after(grammarAccess.getGlobalAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__1__Impl
	rule__Global__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getAsKeyword_1()); }
	'as'
	{ after(grammarAccess.getGlobalAccess().getAsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__2__Impl
	rule__Global__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getTypeAssignment_2()); }
	(rule__Global__TypeAssignment_2)
	{ after(grammarAccess.getGlobalAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getGroup_3()); }
	(rule__Global__Group_3__0)?
	{ after(grammarAccess.getGlobalAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Global__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group_3__0__Impl
	rule__Global__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getEqualsSignKeyword_3_0()); }
	'='
	{ after(grammarAccess.getGlobalAccess().getEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getValueAssignment_3_1()); }
	(rule__Global__ValueAssignment_3_1)
	{ after(grammarAccess.getGlobalAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__0__Impl
	rule__Local__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getNameAssignment_0()); }
	(rule__Local__NameAssignment_0)
	{ after(grammarAccess.getLocalAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__1__Impl
	rule__Local__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getAsKeyword_1()); }
	'as'
	{ after(grammarAccess.getLocalAccess().getAsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__2__Impl
	rule__Local__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getTypeAssignment_2()); }
	(rule__Local__TypeAssignment_2)
	{ after(grammarAccess.getLocalAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getGroup_3()); }
	(rule__Local__Group_3__0)?
	{ after(grammarAccess.getLocalAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group_3__0__Impl
	rule__Local__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getEqualsSignKeyword_3_0()); }
	'='
	{ after(grammarAccess.getLocalAccess().getEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getValueAssignment_3_1()); }
	(rule__Local__ValueAssignment_3_1)
	{ after(grammarAccess.getLocalAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getSTATEKeyword_0()); }
	'STATE'
	{ after(grammarAccess.getStateAccess().getSTATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
	(rule__State__NameAssignment_1)
	{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getGroup_2()); }
	(rule__State__Group_2__0)?
	{ after(grammarAccess.getStateAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getGroup_3()); }
	(rule__State__Group_3__0)?
	{ after(grammarAccess.getStateAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_2__0__Impl
	rule__State__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getPROPSKeyword_2_0()); }
	'PROPS'
	{ after(grammarAccess.getStateAccess().getPROPSKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_2__1__Impl
	rule__State__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_2__2__Impl
	rule__State__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLocalsAssignment_2_2()); }
	(rule__State__LocalsAssignment_2_2)*
	{ after(grammarAccess.getStateAccess().getLocalsAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_2_3()); }
	'}'
	{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_3__0__Impl
	rule__State__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getTRANSITIONSKeyword_3_0()); }
	'TRANSITIONS'
	{ after(grammarAccess.getStateAccess().getTRANSITIONSKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_3__1__Impl
	rule__State__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_3__2__Impl
	rule__State__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getTransitionsAssignment_3_2()); }
	(rule__State__TransitionsAssignment_3_2)*
	{ after(grammarAccess.getStateAccess().getTransitionsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Alter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group__0__Impl
	rule__Alter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getALTERKeyword_0()); }
	'ALTER'
	{ after(grammarAccess.getAlterAccess().getALTERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group__1__Impl
	rule__Alter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getSTATEKeyword_1()); }
	'STATE'
	{ after(grammarAccess.getAlterAccess().getSTATEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group__2__Impl
	rule__Alter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getStateAssignment_2()); }
	(rule__Alter__StateAssignment_2)
	{ after(grammarAccess.getAlterAccess().getStateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group__3__Impl
	rule__Alter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getGroup_3()); }
	(rule__Alter__Group_3__0)?
	{ after(grammarAccess.getAlterAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getGroup_4()); }
	(rule__Alter__Group_4__0)?
	{ after(grammarAccess.getAlterAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Alter__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_3__0__Impl
	rule__Alter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getPROPSKeyword_3_0()); }
	'PROPS'
	{ after(grammarAccess.getAlterAccess().getPROPSKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_3__1__Impl
	rule__Alter__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getAlterAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_3__2__Impl
	rule__Alter__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getLocalsAssignment_3_2()); }
	(rule__Alter__LocalsAssignment_3_2)*
	{ after(grammarAccess.getAlterAccess().getLocalsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getAlterAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Alter__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_4__0__Impl
	rule__Alter__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getTRANSITIONSKeyword_4_0()); }
	'TRANSITIONS'
	{ after(grammarAccess.getAlterAccess().getTRANSITIONSKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_4__1__Impl
	rule__Alter__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getAlterAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_4__2__Impl
	rule__Alter__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getTransitionsAssignment_4_2()); }
	(rule__Alter__TransitionsAssignment_4_2)*
	{ after(grammarAccess.getAlterAccess().getTransitionsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getRightCurlyBracketKeyword_4_3()); }
	'}'
	{ after(grammarAccess.getAlterAccess().getRightCurlyBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getONKeyword_0()); }
	'ON'
	{ after(grammarAccess.getTransitionAccess().getONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getEventAssignment_1()); }
	(rule__Transition__EventAssignment_1)
	{ after(grammarAccess.getTransitionAccess().getEventAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTOKeyword_2()); }
	'TO'
	{ after(grammarAccess.getTransitionAccess().getTOKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getStateAssignment_3()); }
	(rule__Transition__StateAssignment_3)
	{ after(grammarAccess.getTransitionAccess().getStateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGroup_4()); }
	(rule__Transition__Group_4__0)?
	{ after(grammarAccess.getTransitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_4__0__Impl
	rule__Transition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getIFKeyword_4_0()); }
	'IF'
	{ after(grammarAccess.getTransitionAccess().getIFKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_4__1__Impl
	rule__Transition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getConditionAssignment_4_1()); }
	(rule__Transition__ConditionAssignment_4_1)?
	{ after(grammarAccess.getTransitionAccess().getConditionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGroup_4_2()); }
	(rule__Transition__Group_4_2__0)?
	{ after(grammarAccess.getTransitionAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_4_2__0__Impl
	rule__Transition__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getSETKeyword_4_2_0()); }
	'SET'
	{ after(grammarAccess.getTransitionAccess().getSETKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getAssignmentAssignment_4_2_1()); }
	(rule__Transition__AssignmentAssignment_4_2_1)
	{ after(grammarAccess.getTransitionAccess().getAssignmentAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getConditionAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGroup_1()); }
	(rule__Condition__Group_1__0)*
	{ after(grammarAccess.getConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getElementLeftAction_1_0()); }
	()
	{ after(grammarAccess.getConditionAccess().getElementLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__1__Impl
	rule__Condition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperatorAssignment_1_1()); }
	(rule__Condition__OperatorAssignment_1_1)
	{ after(grammarAccess.getConditionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightAssignment_1_2()); }
	(rule__Condition__RightAssignment_1_2)
	{ after(grammarAccess.getConditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group__0__Impl
	rule__Atomic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBoolConstantAction_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBoolConstantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1()); }
	(rule__Atomic__ValueAssignment_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getCurrentVarAssignment_0()); }
	(rule__Assignment__CurrentVarAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getCurrentVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
	(rule__Assignment__ValueAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GlobalsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGlobalsGlobalParserRuleCall_2_2_0()); }
		ruleGlobal
		{ after(grammarAccess.getModelAccess().getGlobalsGlobalParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStatesStateParserRuleCall_3_0_0()); }
		ruleState
		{ after(grammarAccess.getModelAccess().getStatesStateParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__AltersAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getAltersAlterParserRuleCall_3_1_0()); }
		ruleAlter
		{ after(grammarAccess.getModelAccess().getAltersAlterParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getGlobalAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getTypeDataTypeEnumRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getGlobalAccess().getTypeDataTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getGlobalAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLocalAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAccess().getTypeDataTypeEnumRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getLocalAccess().getTypeDataTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLocalAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__LocalsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getLocalsLocalParserRuleCall_2_2_0()); }
		ruleLocal
		{ after(grammarAccess.getStateAccess().getLocalsLocalParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__TransitionsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_3_2_0()); }
		ruleTransition
		{ after(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__StateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAccess().getStateStateCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAlterAccess().getStateStateIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAlterAccess().getStateStateIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAlterAccess().getStateStateCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__LocalsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAccess().getLocalsLocalParserRuleCall_3_2_0()); }
		ruleLocal
		{ after(grammarAccess.getAlterAccess().getLocalsLocalParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__TransitionsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAccess().getTransitionsTransitionParserRuleCall_4_2_0()); }
		ruleTransition
		{ after(grammarAccess.getAlterAccess().getTransitionsTransitionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getEventEventCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getEventEventIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionAccess().getEventEventIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getEventEventCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__StateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getStateStateCrossReference_3_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getStateStateIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionAccess().getStateStateIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getStateStateCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ConditionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getConditionConditionParserRuleCall_4_1_0()); }
		ruleCondition
		{ after(grammarAccess.getTransitionAccess().getConditionConditionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__AssignmentAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getAssignmentAssignmentParserRuleCall_4_2_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getTransitionAccess().getAssignmentAssignmentParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperatorComparisonOperatorEnumRuleCall_1_1_0()); }
		ruleComparisonOperator
		{ after(grammarAccess.getConditionAccess().getOperatorComparisonOperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getConditionAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAlternatives_1_0()); }
		(rule__Atomic__ValueAlternatives_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__CurrentVarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getCurrentVarVariableReferenceParserRuleCall_0_0()); }
		ruleVariableReference
		{ after(grammarAccess.getAssignmentAccess().getCurrentVarVariableReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getAssignmentAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VariableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_INT : ('0'..'9')+;

RULE_BOOL : ('TRUE'|'FALSE');

RULE_DOUBLE : ('0'..'9')+ '.' ('0'..'9')* (('E'|'e') ('+'|'-')? ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
