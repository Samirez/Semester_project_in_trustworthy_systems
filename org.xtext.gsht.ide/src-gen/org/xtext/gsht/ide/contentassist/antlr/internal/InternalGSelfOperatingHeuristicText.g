/*
 * generated by Xtext 2.30.0
 */
grammar InternalGSelfOperatingHeuristicText;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.gsht.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.gsht.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.gsht.services.GSelfOperatingHeuristicTextGrammarAccess;

}
@parser::members {
	private GSelfOperatingHeuristicTextGrammarAccess grammarAccess;

	public void setGrammarAccess(GSelfOperatingHeuristicTextGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobal
entryRuleGlobal
:
{ before(grammarAccess.getGlobalRule()); }
	 ruleGlobal
{ after(grammarAccess.getGlobalRule()); } 
	 EOF 
;

// Rule Global
ruleGlobal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalAccess().getGroup()); }
		(rule__Global__Group__0)
		{ after(grammarAccess.getGlobalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocal
entryRuleLocal
:
{ before(grammarAccess.getLocalRule()); }
	 ruleLocal
{ after(grammarAccess.getLocalRule()); } 
	 EOF 
;

// Rule Local
ruleLocal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalAccess().getGroup()); }
		(rule__Local__Group__0)
		{ after(grammarAccess.getLocalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitial
entryRuleInitial
:
{ before(grammarAccess.getInitialRule()); }
	 ruleInitial
{ after(grammarAccess.getInitialRule()); } 
	 EOF 
;

// Rule Initial
ruleInitial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialAccess().getInitStateAction()); }
		()
		{ after(grammarAccess.getInitialAccess().getInitStateAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlter
entryRuleAlter
:
{ before(grammarAccess.getAlterRule()); }
	 ruleAlter
{ after(grammarAccess.getAlterRule()); } 
	 EOF 
;

// Rule Alter
ruleAlter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlterAccess().getGroup()); }
		(rule__Alter__Group__0)
		{ after(grammarAccess.getAlterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getNameAssignment()); }
		(rule__Event__NameAssignment)
		{ after(grammarAccess.getEventAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableReference
entryRuleVariableReference
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getVariableAssignment()); }
		(rule__VariableReference__VariableAssignment)
		{ after(grammarAccess.getVariableReferenceAccess().getVariableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAutomaton
entryRuleAutomaton
:
{ before(grammarAccess.getAutomatonRule()); }
	 ruleAutomaton
{ after(grammarAccess.getAutomatonRule()); } 
	 EOF 
;

// Rule Automaton
ruleAutomaton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAutomatonAccess().getGroup()); }
		(rule__Automaton__Group__0)
		{ after(grammarAccess.getAutomatonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataType
ruleDataType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ComparisonOperator
ruleComparisonOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
		(rule__ComparisonOperator__Alternatives)
		{ after(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDRONEKeyword_0_0()); }
		'DRONE'
		{ after(grammarAccess.getModelAccess().getDRONEKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getDroneKeyword_0_1()); }
		'drone'
		{ after(grammarAccess.getModelAccess().getDroneKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGLOBALKeyword_2_0_0()); }
		'GLOBAL'
		{ after(grammarAccess.getModelAccess().getGLOBALKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getGlobalKeyword_2_0_1()); }
		'global'
		{ after(grammarAccess.getModelAccess().getGlobalKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEVENTSKeyword_3_0_0()); }
		'EVENTS'
		{ after(grammarAccess.getModelAccess().getEVENTSKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getEventsKeyword_3_0_1()); }
		'events'
		{ after(grammarAccess.getModelAccess().getEventsKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStatesAssignment_4_0()); }
		(rule__Model__StatesAssignment_4_0)
		{ after(grammarAccess.getModelAccess().getStatesAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getAltersAssignment_4_1()); }
		(rule__Model__AltersAssignment_4_1)
		{ after(grammarAccess.getModelAccess().getAltersAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getASKeyword_1_0()); }
		'AS'
		{ after(grammarAccess.getGlobalAccess().getASKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getGlobalAccess().getAsKeyword_1_1()); }
		'as'
		{ after(grammarAccess.getGlobalAccess().getAsKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAccess().getASKeyword_1_0()); }
		'AS'
		{ after(grammarAccess.getLocalAccess().getASKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLocalAccess().getAsKeyword_1_1()); }
		'as'
		{ after(grammarAccess.getLocalAccess().getAsKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getINITKeyword_0_0_0()); }
		'INIT'
		{ after(grammarAccess.getStateAccess().getINITKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getInitKeyword_0_0_1()); }
		'init'
		{ after(grammarAccess.getStateAccess().getInitKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getSTATEKeyword_1_0()); }
		'STATE'
		{ after(grammarAccess.getStateAccess().getSTATEKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getStateKeyword_1_1()); }
		'state'
		{ after(grammarAccess.getStateAccess().getStateKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getPROPSKeyword_3_0_0()); }
		'PROPS'
		{ after(grammarAccess.getStateAccess().getPROPSKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getPropsKeyword_3_0_1()); }
		'props'
		{ after(grammarAccess.getStateAccess().getPropsKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getTRANSITIONSKeyword_4_0_0()); }
		'TRANSITIONS'
		{ after(grammarAccess.getStateAccess().getTRANSITIONSKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getTransitionsKeyword_4_0_1()); }
		'transitions'
		{ after(grammarAccess.getStateAccess().getTransitionsKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAccess().getALTERKeyword_0_0()); }
		'ALTER'
		{ after(grammarAccess.getAlterAccess().getALTERKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlterAccess().getAlterKeyword_0_1()); }
		'alter'
		{ after(grammarAccess.getAlterAccess().getAlterKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAccess().getSTATEKeyword_1_0()); }
		'STATE'
		{ after(grammarAccess.getAlterAccess().getSTATEKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlterAccess().getStateKeyword_1_1()); }
		'state'
		{ after(grammarAccess.getAlterAccess().getStateKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAccess().getPROPSKeyword_3_0_0()); }
		'PROPS'
		{ after(grammarAccess.getAlterAccess().getPROPSKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlterAccess().getPropsKeyword_3_0_1()); }
		'props'
		{ after(grammarAccess.getAlterAccess().getPropsKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAccess().getTRANSITIONSKeyword_4_0_0()); }
		'TRANSITIONS'
		{ after(grammarAccess.getAlterAccess().getTRANSITIONSKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlterAccess().getTransitionsKeyword_4_0_1()); }
		'transitions'
		{ after(grammarAccess.getAlterAccess().getTransitionsKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getONKeyword_0_0()); }
		'ON'
		{ after(grammarAccess.getTransitionAccess().getONKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionAccess().getOnKeyword_0_1()); }
		'on'
		{ after(grammarAccess.getTransitionAccess().getOnKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getTOKeyword_2_0()); }
		'TO'
		{ after(grammarAccess.getTransitionAccess().getTOKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionAccess().getToKeyword_2_1()); }
		'to'
		{ after(grammarAccess.getTransitionAccess().getToKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getIFKeyword_4_0_0()); }
		'IF'
		{ after(grammarAccess.getTransitionAccess().getIFKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionAccess().getIfKeyword_4_0_1()); }
		'if'
		{ after(grammarAccess.getTransitionAccess().getIfKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getSETKeyword_5_0_0()); }
		'SET'
		{ after(grammarAccess.getTransitionAccess().getSETKeyword_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionAccess().getSetKeyword_5_0_1()); }
		'set'
		{ after(grammarAccess.getTransitionAccess().getSetKeyword_5_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getBOOLTerminalRuleCall_0()); }
		RULE_BOOL
		{ after(grammarAccess.getValueAccess().getBOOLTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getINTTerminalRuleCall_2()); }
		RULE_INT
		{ after(grammarAccess.getValueAccess().getINTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getDOUBLETerminalRuleCall_3()); }
		RULE_DOUBLE
		{ after(grammarAccess.getValueAccess().getDOUBLETerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatonAccess().getAUTOMATONKeyword_0_0()); }
		'AUTOMATON'
		{ after(grammarAccess.getAutomatonAccess().getAUTOMATONKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAutomatonAccess().getAutomatonKeyword_0_1()); }
		'automaton'
		{ after(grammarAccess.getAutomatonAccess().getAutomatonKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNOTEnumLiteralDeclaration_0()); }
		('??')
		{ after(grammarAccess.getDataTypeAccess().getNOTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_1()); }
		('int')
		{ after(grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getBOOLEnumLiteralDeclaration_2()); }
		('boolean')
		{ after(grammarAccess.getDataTypeAccess().getBOOLEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_3()); }
		('double')
		{ after(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_4()); }
		('String')
		{ after(grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getNOT_BOOLEnumLiteralDeclaration_0()); }
		('\u00A4\u00A4')
		{ after(grammarAccess.getComparisonOperatorAccess().getNOT_BOOLEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getNOT_EQUALSEnumLiteralDeclaration_1()); }
		('!=')
		{ after(grammarAccess.getComparisonOperatorAccess().getNOT_EQUALSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getEQUALSEnumLiteralDeclaration_2()); }
		('==')
		{ after(grammarAccess.getComparisonOperatorAccess().getEQUALSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGREATER_THANEnumLiteralDeclaration_3()); }
		('>')
		{ after(grammarAccess.getComparisonOperatorAccess().getGREATER_THANEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getLESS_THANEnumLiteralDeclaration_4()); }
		('<')
		{ after(grammarAccess.getComparisonOperatorAccess().getLESS_THANEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGREATER_THAN_OR_EQUALSEnumLiteralDeclaration_5()); }
		('>=')
		{ after(grammarAccess.getComparisonOperatorAccess().getGREATER_THAN_OR_EQUALSEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getLESS_THAN_OR_EQUALSEnumLiteralDeclaration_6()); }
		('<=')
		{ after(grammarAccess.getComparisonOperatorAccess().getLESS_THAN_OR_EQUALSEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_0()); }
	(rule__Model__Alternatives_0)
	{ after(grammarAccess.getModelAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_2()); }
	(rule__Model__Group_2__0)?
	{ after(grammarAccess.getModelAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_3()); }
	(rule__Model__Group_3__0)*
	{ after(grammarAccess.getModelAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_4()); }
	(rule__Model__Alternatives_4)*
	{ after(grammarAccess.getModelAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAutomatonAssignment_5()); }
	(rule__Model__AutomatonAssignment_5)*
	{ after(grammarAccess.getModelAccess().getAutomatonAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__0__Impl
	rule__Model__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_2_0()); }
	(rule__Model__Alternatives_2_0)
	{ after(grammarAccess.getModelAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__1__Impl
	rule__Model__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__2__Impl
	rule__Model__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGlobalsAssignment_2_2()); }
	(rule__Model__GlobalsAssignment_2_2)*
	{ after(grammarAccess.getModelAccess().getGlobalsAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_2_3()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3__0__Impl
	rule__Model__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_3_0()); }
	(rule__Model__Alternatives_3_0)*
	{ after(grammarAccess.getModelAccess().getAlternatives_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3__1__Impl
	rule__Model__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3__2__Impl
	rule__Model__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getEventsAssignment_3_2()); }
	(rule__Model__EventsAssignment_3_2)*
	{ after(grammarAccess.getModelAccess().getEventsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Global__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__0__Impl
	rule__Global__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getNameAssignment_0()); }
	(rule__Global__NameAssignment_0)
	{ after(grammarAccess.getGlobalAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__1__Impl
	rule__Global__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getAlternatives_1()); }
	(rule__Global__Alternatives_1)
	{ after(grammarAccess.getGlobalAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__2__Impl
	rule__Global__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getTypeAssignment_2()); }
	(rule__Global__TypeAssignment_2)
	{ after(grammarAccess.getGlobalAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__3__Impl
	rule__Global__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getGlobalAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getValueAssignment_4()); }
	(rule__Global__ValueAssignment_4)
	{ after(grammarAccess.getGlobalAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__0__Impl
	rule__Local__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getNameAssignment_0()); }
	(rule__Local__NameAssignment_0)
	{ after(grammarAccess.getLocalAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__1__Impl
	rule__Local__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getAlternatives_1()); }
	(rule__Local__Alternatives_1)
	{ after(grammarAccess.getLocalAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__2__Impl
	rule__Local__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getTypeAssignment_2()); }
	(rule__Local__TypeAssignment_2)
	{ after(grammarAccess.getLocalAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__3__Impl
	rule__Local__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getLocalAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getValueAssignment_4()); }
	(rule__Local__ValueAssignment_4)
	{ after(grammarAccess.getLocalAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getGroup_0()); }
	(rule__State__Group_0__0)?
	{ after(grammarAccess.getStateAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getAlternatives_1()); }
	(rule__State__Alternatives_1)
	{ after(grammarAccess.getStateAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_2()); }
	(rule__State__NameAssignment_2)
	{ after(grammarAccess.getStateAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getGroup_3()); }
	(rule__State__Group_3__0)?
	{ after(grammarAccess.getStateAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getGroup_4()); }
	(rule__State__Group_4__0)?
	{ after(grammarAccess.getStateAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_0__0__Impl
	rule__State__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getAlternatives_0_0()); }
	(rule__State__Alternatives_0_0)
	{ after(grammarAccess.getStateAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getInitAssignment_0_1()); }
	(rule__State__InitAssignment_0_1)
	{ after(grammarAccess.getStateAccess().getInitAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_3__0__Impl
	rule__State__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getAlternatives_3_0()); }
	(rule__State__Alternatives_3_0)
	{ after(grammarAccess.getStateAccess().getAlternatives_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_3__1__Impl
	rule__State__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_3__2__Impl
	rule__State__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLocalsAssignment_3_2()); }
	(rule__State__LocalsAssignment_3_2)*
	{ after(grammarAccess.getStateAccess().getLocalsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_4__0__Impl
	rule__State__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getAlternatives_4_0()); }
	(rule__State__Alternatives_4_0)
	{ after(grammarAccess.getStateAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_4__1__Impl
	rule__State__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_4__2__Impl
	rule__State__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getTransitionsAssignment_4_2()); }
	(rule__State__TransitionsAssignment_4_2)*
	{ after(grammarAccess.getStateAccess().getTransitionsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_4_3()); }
	'}'
	{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Alter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group__0__Impl
	rule__Alter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getAlternatives_0()); }
	(rule__Alter__Alternatives_0)
	{ after(grammarAccess.getAlterAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group__1__Impl
	rule__Alter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getAlternatives_1()); }
	(rule__Alter__Alternatives_1)
	{ after(grammarAccess.getAlterAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group__2__Impl
	rule__Alter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getStateAssignment_2()); }
	(rule__Alter__StateAssignment_2)
	{ after(grammarAccess.getAlterAccess().getStateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group__3__Impl
	rule__Alter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getGroup_3()); }
	(rule__Alter__Group_3__0)?
	{ after(grammarAccess.getAlterAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getGroup_4()); }
	(rule__Alter__Group_4__0)?
	{ after(grammarAccess.getAlterAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Alter__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_3__0__Impl
	rule__Alter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getAlternatives_3_0()); }
	(rule__Alter__Alternatives_3_0)
	{ after(grammarAccess.getAlterAccess().getAlternatives_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_3__1__Impl
	rule__Alter__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getAlterAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_3__2__Impl
	rule__Alter__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getLocalsAssignment_3_2()); }
	(rule__Alter__LocalsAssignment_3_2)*
	{ after(grammarAccess.getAlterAccess().getLocalsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getAlterAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Alter__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_4__0__Impl
	rule__Alter__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getAlternatives_4_0()); }
	(rule__Alter__Alternatives_4_0)
	{ after(grammarAccess.getAlterAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_4__1__Impl
	rule__Alter__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getAlterAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_4__2__Impl
	rule__Alter__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getTransitionsAssignment_4_2()); }
	(rule__Alter__TransitionsAssignment_4_2)*
	{ after(grammarAccess.getAlterAccess().getTransitionsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alter__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAccess().getRightCurlyBracketKeyword_4_3()); }
	'}'
	{ after(grammarAccess.getAlterAccess().getRightCurlyBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getAlternatives_0()); }
	(rule__Transition__Alternatives_0)
	{ after(grammarAccess.getTransitionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getEventAssignment_1()); }
	(rule__Transition__EventAssignment_1)
	{ after(grammarAccess.getTransitionAccess().getEventAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getAlternatives_2()); }
	(rule__Transition__Alternatives_2)
	{ after(grammarAccess.getTransitionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getStateAssignment_3()); }
	(rule__Transition__StateAssignment_3)
	{ after(grammarAccess.getTransitionAccess().getStateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGroup_4()); }
	(rule__Transition__Group_4__0)?
	{ after(grammarAccess.getTransitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGroup_5()); }
	(rule__Transition__Group_5__0)?
	{ after(grammarAccess.getTransitionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_4__0__Impl
	rule__Transition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getAlternatives_4_0()); }
	(rule__Transition__Alternatives_4_0)
	{ after(grammarAccess.getTransitionAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getConditionAssignment_4_1()); }
	(rule__Transition__ConditionAssignment_4_1)
	{ after(grammarAccess.getTransitionAccess().getConditionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_5__0__Impl
	rule__Transition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getAlternatives_5_0()); }
	(rule__Transition__Alternatives_5_0)
	{ after(grammarAccess.getTransitionAccess().getAlternatives_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getAssignmentAssignment_5_1()); }
	(rule__Transition__AssignmentAssignment_5_1)
	{ after(grammarAccess.getTransitionAccess().getAssignmentAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftAssignment_0()); }
	(rule__Condition__LeftAssignment_0)
	{ after(grammarAccess.getConditionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperatorAssignment_1()); }
	(rule__Condition__OperatorAssignment_1)
	{ after(grammarAccess.getConditionAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightAssignment_2()); }
	(rule__Condition__RightAssignment_2)
	{ after(grammarAccess.getConditionAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getCurrentVarAssignment_0()); }
	(rule__Assignment__CurrentVarAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getCurrentVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
	(rule__Assignment__ValueAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Automaton__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__0__Impl
	rule__Automaton__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getAlternatives_0()); }
	(rule__Automaton__Alternatives_0)
	{ after(grammarAccess.getAutomatonAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__1__Impl
	rule__Automaton__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getNameAssignment_1()); }
	(rule__Automaton__NameAssignment_1)
	{ after(grammarAccess.getAutomatonAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__2__Impl
	rule__Automaton__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAutomatonAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__3__Impl
	rule__Automaton__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getStatesAssignment_3()); }
	(rule__Automaton__StatesAssignment_3)*
	{ after(grammarAccess.getAutomatonAccess().getStatesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAutomatonAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GlobalsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGlobalsGlobalParserRuleCall_2_2_0()); }
		ruleGlobal
		{ after(grammarAccess.getModelAccess().getGlobalsGlobalParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__EventsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEventsEventParserRuleCall_3_2_0()); }
		ruleEvent
		{ after(grammarAccess.getModelAccess().getEventsEventParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStatesStateParserRuleCall_4_0_0()); }
		ruleState
		{ after(grammarAccess.getModelAccess().getStatesStateParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__AltersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getAltersAlterParserRuleCall_4_1_0()); }
		ruleAlter
		{ after(grammarAccess.getModelAccess().getAltersAlterParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__AutomatonAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getAutomatonAutomatonParserRuleCall_5_0()); }
		ruleAutomaton
		{ after(grammarAccess.getModelAccess().getAutomatonAutomatonParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getGlobalAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getTypeDataTypeEnumRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getGlobalAccess().getTypeDataTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getValueValueParserRuleCall_4_0()); }
		ruleValue
		{ after(grammarAccess.getGlobalAccess().getValueValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLocalAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAccess().getTypeDataTypeEnumRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getLocalAccess().getTypeDataTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAccess().getValueValueParserRuleCall_4_0()); }
		ruleValue
		{ after(grammarAccess.getLocalAccess().getValueValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__InitAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getInitInitialParserRuleCall_0_1_0()); }
		ruleInitial
		{ after(grammarAccess.getStateAccess().getInitInitialParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__LocalsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getLocalsLocalParserRuleCall_3_2_0()); }
		ruleLocal
		{ after(grammarAccess.getStateAccess().getLocalsLocalParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__TransitionsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_2_0()); }
		ruleTransition
		{ after(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__StateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAccess().getStateStateCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAlterAccess().getStateStateIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAlterAccess().getStateStateIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAlterAccess().getStateStateCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__LocalsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAccess().getLocalsLocalParserRuleCall_3_2_0()); }
		ruleLocal
		{ after(grammarAccess.getAlterAccess().getLocalsLocalParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alter__TransitionsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAccess().getTransitionsTransitionParserRuleCall_4_2_0()); }
		ruleTransition
		{ after(grammarAccess.getAlterAccess().getTransitionsTransitionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getEventEventCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getEventEventIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionAccess().getEventEventIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getEventEventCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__StateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getStateStateCrossReference_3_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getStateStateIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionAccess().getStateStateIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getStateStateCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ConditionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getConditionConditionParserRuleCall_4_1_0()); }
		ruleCondition
		{ after(grammarAccess.getTransitionAccess().getConditionConditionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__AssignmentAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getAssignmentAssignmentParserRuleCall_5_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getTransitionAccess().getAssignmentAssignmentParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getLeftVariableReferenceParserRuleCall_0_0()); }
		ruleVariableReference
		{ after(grammarAccess.getConditionAccess().getLeftVariableReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperatorComparisonOperatorEnumRuleCall_1_0()); }
		ruleComparisonOperator
		{ after(grammarAccess.getConditionAccess().getOperatorComparisonOperatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getRightValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getConditionAccess().getRightValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__CurrentVarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getCurrentVarVariableReferenceParserRuleCall_0_0()); }
		ruleVariableReference
		{ after(grammarAccess.getAssignmentAccess().getCurrentVarVariableReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getAssignmentAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VariableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatonAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAutomatonAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__StatesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatonAccess().getStatesStateCrossReference_3_0()); }
		(
			{ before(grammarAccess.getAutomatonAccess().getStatesStateIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAutomatonAccess().getStatesStateIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getAutomatonAccess().getStatesStateCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_INT : ('0'..'9')+;

RULE_BOOL : (('TRUE'|'true'|'True')|('FALSE'|'false'|'False'));

RULE_DOUBLE : ('0'..'9')+ '.' ('0'..'9')* (('E'|'e') ('+'|'-')? ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
