/*
 * generated by Xtext 2.29.0
 */
package org.xtext.gsht.validation;

import org.eclipse.xtext.validation.Check;

import org.xtext.gsht.gSelfOperatingHeuristicText.Model;
import org.xtext.gsht.gSelfOperatingHeuristicText.GSelfOperatingHeuristicTextPackage;
/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class GSelfOperatingHeuristicTextValidator extends AbstractGSelfOperatingHeuristicTextValidator {
	
//	public static final String INVALID_NAME = "invalidName";
//
//	@Check
//	public void checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.getName().charAt(0))) {
//			warning("Name should start with a capital",
//					GSelfOperatingHeuristicTextPackage.Literals.GREETING__NAME,
//					INVALID_NAME);
//		}
//	}
	
	@Check
	public void checkNotMultipleInit(Model model) {
		int count = 0;
		for (org.xtext.gsht.gSelfOperatingHeuristicText.State state : model.getStates()) {
			if (state.isInit()) {
				count++;
			}
		}
		if ( count > 1 ) {
			error("Initial has to be unique", GSelfOperatingHeuristicTextPackage.Literals.MODEL__STATES);
			//error ("bad", , GSelfOperatingHeuristicTextPackage.Literals.STATE__INIT, -1);
			
            return;
		}
		if ( count < 1 ) {
			error("There is no Initial state", GSelfOperatingHeuristicTextPackage.Literals.MODEL__STATES);
			//error ("bad", , GSelfOperatingHeuristicTextPackage.Literals.STATE__INIT, -1);
			
            return;
		}
	}
	
}
